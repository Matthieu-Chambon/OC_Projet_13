name: Django CI/CD

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12.4"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12.4"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest
          pytest --cov=. --cov-fail-under=80

  quality:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12.4"
      - name: Install linter
        run: |
          pip install flake8
      - name: Run flake8
        run: flake8 .

  package:
    runs-on: ubuntu-latest
    needs: [test, quality]
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Get short SHA for the last commit
        id: vars
        run: echo "GIT_SHA=$(git log -1 --pretty=format:'%h')" >> $GITHUB_ENV
  
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/oc-project-13:${{ env.GIT_SHA }} .
  
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oc-project-13:${{ env.GIT_SHA }}

  deploy:
    runs-on: ubuntu-latest
    needs: package
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Trigger Render deploy
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
    
